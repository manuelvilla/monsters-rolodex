{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","onChange","type","App","handleChange","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEL,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCPXC,G,MAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACN,GAAD,OAClB,cAAC,EAAD,CAEEC,GAAID,EAAQC,GACZD,QAASA,GAFJA,EAAQC,WCNVM,G,MAAY,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,SACtC,OACE,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbC,SAAUA,MCmEDE,G,wDArEb,aAAe,IAAD,8BACZ,gBAaFC,aAAe,SAACC,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,oBAO1C,WAAU,IAAD,EACyBC,KAAKN,MAA9Bb,EADA,EACAA,SAAUU,EADV,EACUA,YACXU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAGlD,OAAQ,sBAAK9B,UAAU,MAAf,UACN,kDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,SAAUe,KAAKZ,eAEjB,cAAC,EAAD,CAAUP,SAAUoB,W,GAhCRI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cb02bb0d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className='card-container'>\r\n      <img\r\n        alt='monster'\r\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n      />\r\n      <h2>{props.monster.name}</h2>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport {Card} from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className='card-list'>\r\n      {props.monsters.map((monster) => (\r\n        <Card\r\n          key={monster.id}\r\n          id={monster.id}\r\n          monster={monster}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, onChange}) => { //Destructuring props\r\n  return (\r\n    <input\r\n      className='search'\r\n      type='search'\r\n      placeholder={placeholder}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n}\r\n","import React, {Component, useState, useEffect} from 'react';\r\nimport {CardList} from './components/card-list/card-list.component';\r\nimport {SearchBox} from './components/search-box/search-box.component';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      monsters: [],\r\n      searchField: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(users => this.setState({monsters: users}));\r\n  }\r\n\r\n  handleChange = (e) => { //arrow functions helps binding context and scope\r\n     this.setState({searchField: e.target.value})\r\n  }\r\n\r\n  render() {\r\n    const {monsters, searchField} = this.state;\r\n    const filteredMonsters = monsters.filter(monster =>\r\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\r\n    );\r\n\r\n    return (<div className='App'>\r\n      <h1>Monsters Rolodex</h1>\r\n      <SearchBox\r\n        placeholder='Search monsters'\r\n        onChange={this.handleChange}\r\n      />\r\n      <CardList monsters={filteredMonsters} />\r\n    </div>);\r\n  }\r\n}\r\n\r\n/*function App(){\n\n  const [monsters, setMonsters] = useState([]);\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    async function fetchData () {\n      const res = await fetch('https://jsonplaceholder.typicode.com/users');\n      res\n        .json()\n        .then(res => setMonsters(res));\n    }\n    fetchData();\n  });\n\n  const filteredMonsters = monsters.filter (monster =>\n    monster.name.toLowerCase().includes(search.toLowerCase())\n  );\n\n  function handleChange(e){\n    setSearch(e.target.value)\n  }\n\n  return(\n    <div className='App'>\n      <SearchBox\n        placeholder='Search monsters'\n        onChange={handleChange}\n      />\n      <CardList monsters={filteredMonsters} />\n    </div>\n  )\n}*/\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}